#!/usr/bin/python

import argparse
from datetime import datetime
from multiprocessing import Pool

import requests
from boto import ec2
from boto.ec2 import cloudwatch


def get_status(instance):
    r = requests.get('http://%s/realstatus' % instance.public_dns_name)
    return (instance, r.json())


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-r', '--region', default='us-west-2')
    parser.add_argument('-s', '--stackname', help='stack name')
    args = parser.parse_args()

    c = ec2.connect_to_region(args.region)

    reservations = c.get_all_instances(
        filters={'tag:aws:cloudformation:stack-name': args.stackname,
                 'tag:Role': 'app'}
    )

    instances = [i for r in reservations for i in r.instances]

    if not instances:
        print "No instances found."
        exit(1)

    p = Pool(6)
    status = p.map(get_status, instances)
    check_time = datetime.utcnow()

    c = cloudwatch.connect_to_region(args.region)

    for inst, data in status:
        for dimension in [{'InstanceId': inst.id, 'Stack': args.stackname},
                          {'Stack': args.stackname}]:
            c.put_metric_data(
                namespace='Pushgo',
                name='connectionCount',
                timestamp=check_time,
                value=data['clientCount'],
                unit='Count',
                dimensions=dimension
            )

main()
